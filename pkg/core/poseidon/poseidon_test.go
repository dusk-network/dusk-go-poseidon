package poseidon

import (
	"testing"

	ristretto "github.com/bwesterb/go-ristretto"
	"github.com/stretchr/testify/assert"
)

func TestPoseidonHash(t *testing.T) {
	p := New()

	a := ristretto.Scalar{0x2e135665, 0x7d5a70f0, 0xe16c44d8, 0x34937f95, 0x918f4146, 0xcf4c92eb, 0xed739c42, 0x054a144f}
	b := ristretto.Scalar{0xcef5ca00, 0x645d9237, 0x570e0c2f, 0xf235c67d, 0x92d59395, 0x461a4091, 0x7ce77ad9, 0x00e01594}

	p.WriteScalar(a)
	p.WriteScalar(b)

	digest := []byte{0x7b, 0x8c, 0xde, 0x62, 0xdf, 0x18, 0xda, 0xd4, 0xec, 0x99, 0x87, 0xa6, 0xe6, 0x06, 0x89, 0x41, 0x44, 0x0b, 0x58, 0x70, 0xef, 0x5e, 0x1d, 0xa8, 0x69, 0x6a, 0xf4, 0xec, 0x27, 0x23, 0x76, 0x09}
	assert.Equal(t, digest, p.Sum(nil))
}

func TestQuinticSbox(t *testing.T) {
	a := ristretto.Scalar{0xe2d76bf9, 0xbb6e333c, 0x2ec4e479, 0xba272f09, 0x046d4aca, 0x6aadbd72, 0x95c9842a, 0x0f0cdba9}
	b := ristretto.Scalar{0xe41683eb, 0xc0f550ab, 0x7f547e18, 0x935175b2, 0xf72488bf, 0x03384905, 0x30658415, 0x0cf11c8e}

	QuinticSbox(&a)
	assert.Equal(t, b, a)
}
